/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import model.Encounter;
import model.EncounterHistory;
import model.Patient;
import model.PatientDirectory;
import model.PersonDirectory;

/**
 *
 * @author Subhash
 */
public class EditVitals extends javax.swing.JPanel {

    /**
     * Creates new form EditVitals
     */
        PatientDirectory patientDirectory;
    private JSplitPane SplitPane;
    private Patient SelectedPatient;
    private ArrayList <Encounter> EH;
    private int selectedRowIndex;
    PersonDirectory personDirectory;
    
    public EditVitals(JSplitPane SplitPane,PatientDirectory patientDirectory,PersonDirectory personDirectory,Patient SelectedPatient,int selectedRowIndex) {
        initComponents();
        this.patientDirectory = patientDirectory;
        this.SplitPane = SplitPane;
        this.SelectedPatient = SelectedPatient;
        this.selectedRowIndex = selectedRowIndex;
        this.personDirectory = personDirectory;
        
        for(Patient p: patientDirectory.getPatientDirectory())
         {
             if(p.getPatientID()==SelectedPatient.getPatientID())
             {
             txtName.setText(p.getName());
             txtPatientID.setText(String.valueOf(p.getPatientID()));
             int x = 0;
             EH = p.getEH().getEncounterHistory();
             for(Encounter E : EH)
             {
                 if(x==selectedRowIndex)
                 {
             txtBloodPressure.setText(String.valueOf(E.getBloodPressure()));
             txtPulse.setText(String.valueOf(E.getPulse()));
             txtTemperature.setText(String.valueOf(E.getTemperature()));
             }
             x++;
             }
             }
         }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblPatientID = new javax.swing.JLabel();
        lblHeartRate = new javax.swing.JLabel();
        lblRespiratory = new javax.swing.JLabel();
        lblTemperature = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        txtPulse = new javax.swing.JTextField();
        txtBloodPressure = new javax.swing.JTextField();
        txtTemperature = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(153, 255, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Edit Vitals");

        lblName.setText("Name:");

        lblPatientID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientID.setText("Patient ID:");

        lblHeartRate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHeartRate.setText("Pulse:");

        lblRespiratory.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRespiratory.setText("Blood Pressure:");

        lblTemperature.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTemperature.setText("Temperature:");

        txtTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTemperatureActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(255, 153, 153));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 153, 153));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTemperature, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblRespiratory, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPatientID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHeartRate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 68, Short.MAX_VALUE))
                    .addComponent(txtName)
                    .addComponent(txtPatientID)
                    .addComponent(txtPulse)
                    .addComponent(txtBloodPressure)
                    .addComponent(txtTemperature))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitle)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientID)
                    .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeartRate)
                    .addComponent(txtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRespiratory)
                    .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemperature)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnBack))
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private static boolean isInteger(String s) {
    try { 
        Integer.parseInt(s); 
    } catch(NumberFormatException e) { 
        return false; 
    } catch(NullPointerException e) {
        return false;
    }
    // only got here if we didn't return false
    return true;
}
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        if(txtPulse.getText().equals("") || !isInteger(txtPulse.getText()))
        {
            JOptionPane.showMessageDialog(this, "Pulse Feild is invalid.");
        }
        else if(txtTemperature.getText().equals("") || !isInteger(txtTemperature.getText()))
        {
            JOptionPane.showMessageDialog(this, "Temperature Feild is invalid.");
        }
        else if(txtBloodPressure.getText().equals("") || !isInteger(txtBloodPressure.getText()))
        {
            JOptionPane.showMessageDialog(this, "Blood pressure Feild is invalid.");
        }
        else
        {
        for(Patient p: patientDirectory.getPatientDirectory())
         {
             if(p.getPatientID()==SelectedPatient.getPatientID())
             {
             p.setName(txtName.getText());
             int x = 0;
             EH = p.getEH().getEncounterHistory();
             for(Encounter E : EH)
             {
                 if(x==selectedRowIndex)
                 {
            E.setBloodPressure(Integer.parseInt(txtBloodPressure.getText()));
            E.setPulse(Integer.parseInt(txtPulse.getText()));
            E.setTemperature(Integer.parseInt(txtTemperature.getText()));
            
            if(E.getBloodPressure()>120 || E.getBloodPressure()<80 || E.getPulse()<60 || E.getPulse()>100 || E.getTemperature()>103 || E.getTemperature()<96)
             p.setAbnormal(true);
             else
             p.setAbnormal(false);
             if(E.getBloodPressure()>120 || E.getBloodPressure()<80)
                 p.setAbnormalBloodPressure(true);
             else
                 p.setAbnormalBloodPressure(false);
             
             if(E.getPulse()<60 || E.getPulse()>100)
             p.setAbnormalPulse(true);
             else
             p.setAbnormalPulse(false);
             
             if(E.getTemperature()>103 || E.getTemperature()<96)
                 p.setAbnormalTemperature(true);
             else
                 p.setAbnormalTemperature(false);
             }
             x++;
             }
             p.setPatientID(Integer.parseInt(txtPatientID.getText()));
             }
         }
        
        JOptionPane.showMessageDialog(this, "Selected Vital was Updated.");
        txtName.setText("");
        txtPatientID.setText("");
        txtPulse.setText("");
        txtBloodPressure.setText("");
        txtTemperature.setText("");
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ViewPatient viewPatientDetails = new ViewPatient(SplitPane,patientDirectory,personDirectory);
        SplitPane.setRightComponent(viewPatientDetails);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTemperatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTemperatureActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel lblHeartRate;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblRespiratory;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables
}
